
let victimas = [];

const eliminarVictima = (eliminar) => {
    let borrar = eliminar.target.playerName;
    victimas = victimas.filter((victima) => victima.playerName != borrar);
    guardarEnStorage(victimas);
    render();
};

let agregarVictima = document.getElementById("agregar");

agregarVictima.addEventListener("click", (ingresar) => {
    ingresar.preventDefault();
    let inputVictimas = document.getElementById("inputVictima");

    // let ingresoVictima = victimas.length;

    let nombreVictima = inputVictimas.value;
    if (inputVictimas.value == "") {
        setTimeout(alerta, 800);        
    } else {
        victimas.push({
            // id: ingresoVictima,
            playerName: nombreVictima,
            // isDead: false,
        });
    }
    inputVictimas.value = "";
    render();
    guardarEnStorage(victimas);
    console.log(victimas)
    console.log(nombreVictima)
})
//alerta
function alerta() {
    Swal.fire({
        imageUrl: '/src/pixil-frame-alerts.png',
        imageWigth: '20px',
        html: '<h1 class="font-PirataOne text-black"> ingrese el nombre de una victima </h1>',
        confirmButtonColor: '#034C8C',
        position: 'center',
        background: '#009FDE',
    });
    
    imgPlayer.classList.add("shadow");
    
    
};
const render = () => {
    let htmlVictimas = ``;

    let totalVictimas = document.getElementById("listaVictimas");
    
    victimas.forEach(
        (victima) =>
        (htmlVictimas += `<li >
                <p class="victima">${victima.playerName} </p>
                <button class="borraVictima" id="${victima.playerName}" >üóëÔ∏è</button>
            </li>"`)
    );
        (htmlVictimas += `<li class="inline-flex m-2 p-1 lg:p-2 bg-white rounded-lg">
                <p class="victima pr-8 xl:text-3xl">${victima.playerName} </p>
                <button class="borraVictima p-2" id="${victima.id}" > <svg  width="30px" height="30px" viewBox="0 0 656 749" version="1.1">
                <g id="surface1">
                <path style=" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;" d="M 0 210.691406 L 0 159.492188 C 0.976562 140.964844 8.296875 125.359375 21.960938 112.683594 C 35.628906 100.003906 51.734375 93.667969 70.28125 93.667969 L 140.5625 93.667969 L 140.5625 70.261719 C 140.5625 50.757812 147.394531 34.179688 161.0625 20.527344 C 174.726562 6.875 191.320312 0.046875 210.84375 0.046875 L 445.113281 0.046875 C 464.636719 0.046875 481.230469 6.875 494.898438 20.527344 C 508.5625 34.179688 515.394531 50.757812 515.394531 70.261719 L 515.394531 93.667969 L 585.675781 93.667969 C 604.222656 93.667969 620.328125 100.003906 633.996094 112.683594 C 647.660156 125.359375 654.980469 140.964844 655.957031 159.492188 L 655.957031 210.691406 C 655.957031 223.367188 651.320312 234.339844 642.046875 243.605469 C 632.777344 252.867188 621.792969 257.5 609.105469 257.5 L 609.105469 655.382812 C 609.105469 681.710938 600.074219 703.898438 582.015625 721.9375 C 563.957031 739.980469 541.75 749 515.394531 749 L 140.5625 749 C 114.207031 749 92 739.980469 73.941406 721.9375 C 55.882812 703.898438 46.855469 681.710938 46.855469 655.382812 L 46.855469 257.5 C 34.164062 257.5 23.183594 252.867188 13.910156 243.605469 C 4.636719 234.339844 0 223.367188 0 210.691406 Z M 46.855469 210.691406 L 609.105469 210.691406 L 609.105469 163.882812 C 609.105469 157.054688 606.90625 151.449219 602.515625 147.058594 C 598.121094 142.671875 592.507812 140.476562 585.675781 140.476562 L 70.28125 140.476562 C 63.449219 140.476562 57.835938 142.671875 53.441406 147.058594 C 49.050781 151.449219 46.851562 157.054688 46.851562 163.882812 L 46.851562 210.691406 Z M 93.707031 655.382812 C 93.707031 668.058594 98.34375 679.03125 107.617188 688.292969 C 116.890625 697.558594 127.871094 702.191406 140.5625 702.191406 L 515.394531 702.191406 C 528.085938 702.191406 539.066406 697.558594 548.339844 688.292969 C 557.613281 679.03125 562.25 668.058594 562.25 655.382812 L 562.25 257.5 L 93.707031 257.5 Z M 140.5625 631.976562 L 140.5625 327.714844 C 140.5625 320.886719 142.757812 315.28125 147.152344 310.890625 C 151.542969 306.503906 157.15625 304.308594 163.992188 304.308594 L 210.84375 304.308594 C 217.675781 304.308594 223.289062 306.503906 227.683594 310.890625 C 232.074219 315.28125 234.273438 320.886719 234.273438 327.714844 L 234.273438 631.976562 C 234.273438 638.800781 232.074219 644.410156 227.683594 648.796875 C 223.289062 653.1875 217.675781 655.382812 210.84375 655.382812 L 163.992188 655.382812 C 157.15625 655.382812 151.542969 653.1875 147.152344 648.796875 C 142.757812 644.410156 140.5625 638.800781 140.5625 631.976562 Z M 163.988281 631.976562 L 210.84375 631.976562 L 210.84375 327.714844 L 163.988281 327.714844 Z M 187.417969 93.667969 L 468.542969 93.667969 L 468.542969 70.261719 C 468.542969 63.4375 466.34375 57.828125 461.953125 53.441406 C 457.558594 49.050781 451.945312 46.855469 445.113281 46.855469 L 210.84375 46.855469 C 204.011719 46.855469 198.398438 49.050781 194.003906 53.441406 C 189.613281 57.828125 187.414062 63.4375 187.414062 70.261719 L 187.414062 93.667969 Z M 281.125 631.976562 L 281.125 327.714844 C 281.125 320.886719 283.320312 315.28125 287.714844 310.890625 C 292.105469 306.503906 297.71875 304.308594 304.550781 304.308594 L 351.40625 304.308594 C 358.238281 304.308594 363.851562 306.503906 368.246094 310.890625 C 372.636719 315.28125 374.835938 320.886719 374.835938 327.714844 L 374.835938 631.976562 C 374.835938 638.800781 372.636719 644.410156 368.246094 648.796875 C 363.851562 653.1875 358.238281 655.382812 351.40625 655.382812 L 304.550781 655.382812 C 297.71875 655.382812 292.105469 653.1875 287.714844 648.796875 C 283.320312 644.410156 281.125 638.800781 281.125 631.976562 Z M 304.550781 631.976562 L 351.40625 631.976562 L 351.40625 327.714844 L 304.550781 327.714844 Z M 421.6875 631.976562 L 421.6875 327.714844 C 421.6875 320.886719 423.882812 315.28125 428.277344 310.890625 C 432.667969 306.503906 438.28125 304.308594 445.113281 304.308594 L 491.96875 304.308594 C 498.800781 304.308594 504.414062 306.503906 508.808594 310.890625 C 513.199219 315.28125 515.398438 320.886719 515.398438 327.714844 L 515.398438 631.976562 C 515.398438 638.800781 513.199219 644.410156 508.808594 648.796875 C 504.414062 653.1875 498.800781 655.382812 491.96875 655.382812 L 445.113281 655.382812 C 438.28125 655.382812 432.667969 653.1875 428.277344 648.796875 C 423.882812 644.410156 421.6875 638.800781 421.6875 631.976562 Z M 445.113281 631.976562 L 491.96875 631.976562 L 491.96875 327.714844 L 445.113281 327.714844 Z M 445.113281 631.976562 "/>
                </g>
                </svg></button>
            </li>`));
    totalVictimas.innerHTML = htmlVictimas;
    borrarButton();
};
const borrarButton = (e) => {
    let eliminaVictima = document.querySelectorAll(".borraVictima");
    console.log(eliminaVictima)
    eliminaVictima.forEach((botonCaneca) =>
        botonCaneca.addEventListener("click", eliminarVictima)
    );
    
};

render();


function guardarEnStorage(object) {
    let victimaLocal = object;

    localStorage.setItem("victimasKey", JSON.stringify(victimaLocal));
}



//




